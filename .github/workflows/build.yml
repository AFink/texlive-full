name: Create and publish a Docker image

on:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-base-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v1
        with:
          version: v24.0.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base Docker image
        id: build_base
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: base
          tags: ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]'):base
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

  build-and-push-images:
    runs-on: ubuntu-latest
    needs: build-base-image
    strategy:
      matrix:
        #texlive-year: [2020, 2021, 2022, 2023, 2024]
        texlive-year: [2023, 2024]
        #texlive-scheme: [scheme-basic, scheme-medium, scheme-full]
        texlive-scheme: [scheme-basic, scheme-medium]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v1
        with:
          version: v24.0.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            TEXLIVE_YEAR=${{ matrix.texlive-year }}
            TEXLIVE_SCHEME=${{ matrix.texlive-scheme }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.texlive-year }}-${{ matrix.texlive-scheme }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
