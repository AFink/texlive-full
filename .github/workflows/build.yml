name: Create and publish a Docker image

on:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #texlive-year: [2020, 2021, 2022, 2023, 2024]
        texlive-year: [2023, 2024]
        texlive-scheme: [scheme-basic, scheme-medium, scheme-full]
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
    #
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.texlive-year }}-${{ matrix.texlive-scheme }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build base Docker image
        id: build_base
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: base
          load: true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            TEXLIVE_YEAR=${{ matrix.texlive-year }}
            TEXLIVE_SCHEME=${{ matrix.texlive-scheme }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.texlive-year }}-${{ matrix.texlive-scheme }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,push=true
          push: true
